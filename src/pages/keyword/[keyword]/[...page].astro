---
import { client } from '@lib/newt/client'
import type { GetStaticPathsOptions } from 'astro'
import type { PostData, PostItem, KeywordData, KeywordItem } from '@type/index'
import Layout from '@layouts/Layout.astro'
import MainPosts from '@components/MainPosts.astro'
import PopularPosts from '@components/PopularPosts.astro'
import SideBar from '@components/SideBar.astro'

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const keywordsData: KeywordData = await client.getContents({
    appUid: import.meta.env.PUBLIC_NEWT_APP_UID,
    modelUid: import.meta.env.PUBLIC_NEWT_MODEL_Keyword,
  })
  const keywordsContents: KeywordItem[] = keywordsData.items

  const postData: PostData = await client.getContents({
    appUid: import.meta.env.PUBLIC_NEWT_APP_UID,
    modelUid: import.meta.env.PUBLIC_NEWT_MODEL_POST,
  })

  return keywordsContents.map((keywordsContent: KeywordItem) => {
    const postsContents: PostItem[] = postData.items.filter(
      (postsContent: PostItem) => {
        return postsContent.keyword.some(
          (item) => item.slug === keywordsContent.slug
        )
      }
    )
    return paginate(postsContents, {
      params: {
        keyword: keywordsContent.slug,
      },
      props: { name: keywordsContent.name },
      pageSize: 10,
    })
  })
}

const { page, name } = Astro.props
const { keyword } = Astro.params

const kvTitleEn = 'keywords'
const kvTitleJa = name
const kvProps = { kvTitleEn, kvTitleJa }

const pageType = 'keyword'
const pageSlug = keyword

const pageProps = { page, pageType, pageSlug }
---

<Layout title="keywords">
  <main class="container">
    <div class="main">
      <MainPosts
        kvProps={kvProps}
        pageProps={pageProps}
        postsContents={page.data}
      />
      <PopularPosts />
    </div>
    <SideBar />
  </main>
</Layout>

<style lang="scss">
  @use '../../../styles/variable' as var;

  .container {
    display: grid;
    grid-template-columns: 1fr 28rem;
    gap: 7.5rem;
    width: 126.5rem;
    margin: 0 auto;
  }

  @media screen and (max-width: var.$break-point-sp) {
    .container {
      grid-template-columns: auto;
      width: 34rem;
      margin: 0 auto;
    }
  }
</style>

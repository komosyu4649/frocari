---
import PopularPosts from '.@omponents/PopularPosts.astro'
import Layout from '@layouts/Layout.astro'
import { client } from '@lib/newt/client'
import SideBar from '@components/SideBar.astro'
import MainPosts from '@components/MainPosts.astro'
import type { GetStaticPathsOptions } from 'astro'

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const categoryData = await client.getContents({
    appUid: import.meta.env.PUBLIC_NEWT_APP_UID,
    modelUid: import.meta.env.PUBLIC_NEWT_MODEL_CATEGORY,
  })
  const categoryContents = categoryData.items
  const postData = await client.getContents({
    appUid: import.meta.env.PUBLIC_NEWT_APP_UID,
    modelUid: import.meta.env.PUBLIC_NEWT_MODEL_POST,
  })
  return categoryContents.map((categoryContent) => {
    const postsContents = postData.items.filter(
      (item) => item.category.slug === categoryContent.slug
    )
    return paginate(postsContents, {
      params: {
        category: categoryContent.slug,
      },
      props: { name: categoryContent.name },
      pageSize: 10,
    })
  })
}
const { page, name } = Astro.props
const { category } = Astro.params
// console.log(page, postsContents, name, category)

const kvTitleEn = 'category'
const kvTitleJa = name
const kvProps = { kvTitleEn, kvTitleJa }

const pageType = 'category'
const pageSlug = category

const pageProps = { page, pageType, pageSlug }
// console.log(pageProps)
// console.log(category, kvTitleEn)
---

<Layout title="category">
  <main class="container">
    <div class="main">
      <MainPosts
        kvProps={kvProps}
        pageProps={pageProps}
        postsContents={page.data}
      />
      <PopularPosts />
    </div>
    <SideBar />
  </main>
</Layout>

<style lang="scss">
  .container {
    display: grid;
    grid-template-columns: 1fr 28rem;
    gap: 7.5rem;
    width: 126.5rem;
    // margin: 8rem auto 0;
    margin: 0 auto;
  }
</style>

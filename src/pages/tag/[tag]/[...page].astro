---
import type { GetStaticPathsOptions } from 'astro'
import MainPosts from '@components/MainPosts.astro'
import PopularPosts from '@components/PopularPosts.astro'
import SideBar from '@components/SideBar.astro'
import Layout from '@layouts/Layout.astro'
import { client } from '@lib/newt/client'

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const keywordsData = await client.getContents({
    appUid: import.meta.env.PUBLIC_NEWT_APP_UID,
    modelUid: import.meta.env.PUBLIC_NEWT_MODEL_TAG,
  })
  const keywordsContents = keywordsData.items
  const postData = await client.getContents({
    appUid: import.meta.env.PUBLIC_NEWT_APP_UID,
    modelUid: import.meta.env.PUBLIC_NEWT_MODEL_POST,
  })
  return keywordsContents.map((keywordsContent) => {
    const postsContents = postData.items.filter((postsContent) => {
      return postsContent.tag.some((item) => item.slug === keywordsContent.slug)
    })
    return paginate(postsContents, {
      params: {
        tag: keywordsContent.slug,
      },
      props: { name: keywordsContent.name },
      pageSize: 10,
    })
  })
}
const { page, name } = Astro.props
const { tag } = Astro.params

const kvTitleEn = 'keywords'
const kvTitleJa = name
const kvProps = { kvTitleEn, kvTitleJa }

const pageType = 'tag'
const pageSlug = tag

const pageProps = { page, pageType, pageSlug }
---

<Layout title="keywords">
  <main class="container">
    <div class="main">
      <MainPosts
        kvProps={kvProps}
        pageProps={pageProps}
        postsContents={page.data}
      />
      <PopularPosts />
    </div>
    <SideBar />
  </main>
</Layout>

<style lang="scss">
  .container {
    display: grid;
    grid-template-columns: 1fr 28rem;
    gap: 7.5rem;
    width: 126.5rem;
    // margin: 8rem auto 0;
    margin: 0 auto;
  }
</style>

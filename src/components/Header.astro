---
import { client } from '@lib/newt/client'
import type { CategoryData, CategoryItem } from '@type/index'
import Search from './Search.astro'
import Keywords from './Keywords.astro'

const categoryData: CategoryData = await client.getContents({
  appUid: import.meta.env.PUBLIC_NEWT_APP_UID,
  modelUid: import.meta.env.PUBLIC_NEWT_MODEL_CATEGORY,
})
const categoryItems: CategoryItem[] = categoryData.items
---

<header class="container">
  <div class="inner">
    <!-- logo -->
    <a href="/" class="logo">
      <!-- <img src="/asset/logo.svg" alt="frocari" width="56" height="17" /> -->
      <img
        src="/asset/img/common/logo.svg"
        alt="frocari"
        width="56"
        height="17"
        class="logoInside"
      />
    </a>

    <!-- sp menu trigger -->
    <button class="spMenuTrigger">
      <span class="spMenuTriggerInside">menu</span>
    </button>

    <!-- menu -->
    <div class="menu">
      <div class="menuInner">
        <!-- main -->
        <nav class="menuMain">
          <ul class="menuMainList">
            {
              categoryItems.map((categoryItem: CategoryItem) => (
                <li class="menuMainItem">
                  <a
                    href={`/category/${categoryItem.slug}/`}
                    class="menuMainItemLink"
                  >
                    <span class="menuMainItemLinkEn">{categoryItem.slug}</span>
                    <span class="menuMainItemLinkJa">{categoryItem.name}</span>
                  </a>
                </li>
              ))
            }
            <li class="menuMainItem">
              <a href="/about/" class="menuMainItemLink">
                <span class="menuMainItemLinkEn">about</span>
                <span class="menuMainItemLinkJa">frocariについて</span>
              </a>
            </li>
          </ul>
        </nav>
        <!-- sub -->
        <div class="menuSub">
          <!-- <Search /> -->
          <Keywords />
        </div>
      </div>
    </div>
  </div>
</header>

<style lang="scss">
  @use '../styles/variable' as var;

  .inner {
    display: flex;
    flex-direction: column;
    align-items: center;
    border-bottom: 1px solid var(--color-black);
  }
  .logo {
    display: inline-block;
    padding: 2.5rem;
  }
  .spMenuTrigger {
    display: none;
  }
  .menu {
    width: 100%;
    border-top: 1px solid var(--color-black);
  }
  .menuMainList {
    display: flex;
    flex-direction: row;
    justify-content: center;
  }
  .menuMainItemLink {
    display: inline-block;
    padding: 2rem;
  }
  .menuMainItemLinkEn {
    display: none;
  }
  .menuMainItemLinkJa {
    font-size: 1.4rem;
  }
  .menuSub {
    display: none;
  }

  @media screen and (max-width: var.$break-point-sp) {
    .container {
      height: 6.7rem;
    }
    .inner {
      position: relative;
    }
    .spMenuTrigger {
      position: fixed;
      bottom: 1.75rem;
      right: 2rem;
      display: flex;
      flex-direction: column;
      gap: 0.4rem;
      justify-content: center;
      align-items: center;
      width: 6.5rem;
      height: 6.5rem;
      background-color: var(--color-black);
      border-radius: 2.5rem;
      border: 2px solid var(--color-white);
      z-index: 6;
    }
    .spMenuTriggerInside {
      color: var(--color-white);
      font-size: 1.2rem;
    }
    .menu {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background-color: var(--color-black);
      overflow: scroll;
      z-index: 5;
      opacity: 0;
      visibility: hidden;
      transition: opacity 0.7s, visibility 0.7s;
      pointer-events: none;
    }
    .menuMain {
      margin-top: 3rem;
    }
    .menuMainList {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
    }
    .menuMainItemLink {
      display: flex;
      flex-direction: column;
    }
    .menuMainItemLinkEn {
      display: inline-block;
      font-size: 3.6rem;
      font-family: 'Urbanist', sans-serif;
      font-weight: bold;
      color: var(--color-white);
    }
    .menuMainItemLinkJa {
      color: var(--color-white);
    }
    .menuSub {
      display: block;
      margin: 6rem 2rem 8rem;
    }

    .is-open__menu {
      .menu {
        opacity: 1;
        visibility: visible;
        pointer-events: all;
        transition: opacity 0.3s, visibility 0.3s;
      }
      .spMenuTrigger {
        background-color: var(--color-white);
        border: 2px solid var(--color-black);
      }
      .spMenuTriggerInside {
        color: var(--color-black);
      }
    }
  }
</style>

<script is:inline>
  const container = document.querySelector('.container')
  const menuTrigger = document.querySelector('.spMenuTrigger')

  menuTrigger.addEventListener('click', () => {
    container.classList.toggle('is-open__menu')
  })
</script>

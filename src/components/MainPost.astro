---
import dayjs from 'dayjs'
import { Image } from '@astrojs/image/components'
import type { Post } from '@/type'
const { postsContents } = Astro.props
// console.log(postsContents)
---

{
  postsContents.map((postsContent: Post) => (
    <li class="item">
      <a href={`/${postsContent.slug}/`} class="itemLink">
        <Image
          src={postsContent.thumbnail.src}
          alt={postsContent.thumbnail.altText}
          width={postsContent.thumbnail.width}
          height={postsContent.thumbnail.height}
          class="itemLinkImg"
        />
      </a>
      <div class="itemLinkContent">
        <div class="itemLinkContentInfo">
          <a
            href={`/category/${postsContent.category.slug}/`}
            class="itemLinkContentInfoCategory"
          >
            {postsContent.category.name}
          </a>
          <time class="itemLinkContentInfoTime" datetime={postsContent.date}>
            {dayjs(postsContent.date).format('YYYY.MM.DD')}
          </time>
        </div>
        <p class="itemLinkContentTitle">{postsContent.title}</p>
        <div class="itemLinkContentTag">
          <ul class="itemLinkContentTagList">
            {postsContent.tag.map((item) => (
              <li class="itemLinkContentTagItem">
                <a
                  href={`/tag/${item.slug}/`}
                  class="itemLinkContentTagItemLink"
                >
                  {item.name}
                </a>
              </li>
            ))}
          </ul>
        </div>
      </div>
    </li>
  ))
}

<style lang="scss">
  @use '../styles/variable' as var;

  .item {
    position: relative;
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 2rem;
  }
  .itemLink {
    &::before {
      position: absolute;
      top: 0;
      left: 0;
      content: '';
      width: 100%;
      height: 100%;
    }
  }
  .itemLinkImg {
    width: 12rem;
    height: 12rem;
    border-radius: 4rem;
  }
  .itemLinkContentInfo {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }
  .itemLinkContentInfoTime {
    font-size: 1.2rem;
    font-family: 'Urbanist', sans-serif;
  }
  .itemLinkContentInfoCategory {
    display: inline-block;
    min-height: 2.5rem;
    padding: 0.25rem 2.25rem;
    font-size: 1.2rem;
    border: 1px solid var(--color-black);
    border-radius: 2rem;
    z-index: 1;
  }
  .itemLinkContentTitle {
    margin: 1rem 0 1.5rem;
    font-size: 1.8rem;
    font-weight: bold;
    line-height: 1.5;
  }
  .itemLinkContentTagList {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1.5rem;
  }
  .itemLinkContentTagItemLink {
    position: relative;
    font-size: 1.2rem;
    background-image: linear-gradient(
      var(--color-text-black),
      var(--color-text-black)
    );
    background-repeat: no-repeat;
    background-size: 100% 1px;
    background-position: 0 100%;
    z-index: 1;
  }

  @media screen and (max-width: var.$break-point-sp) {
    .item {
      gap: 1.5rem;
    }
    .itemLinkImg {
      width: 10rem;
      height: 10rem;
      border-radius: 3rem;
    }
    .itemLinkContentInfoCategory {
      min-height: 2rem;
      // padding: 0.15rem 1.15rem;
      padding: 0rem 1.25rem;
    }
    .itemLinkContentTitle {
      // margin: 0.5rem 0 1rem;
      margin: 0.75rem 0 1rem;
      font-size: 1.6rem;
      // font-size: 1.4rem;
      line-height: 1.5;
    }
  }
</style>
